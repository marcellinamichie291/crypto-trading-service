version: "3.8"
services:
  ws-to-mongo:
    image: reosiain/billy:ws_to_mongo
    container_name: ws_to_mongo
    environment:
      - WS_ADDRESS=${WS_ADDRESS}
      - MONGO_URI=${DB_URI_WO_PORT}:${DB_PORT}
      - SUBSCRIPTION_PARAMS=${SUBSCRIPTION_PARAMS}
      - DB_NAME=${DB_NAME}
      - OHLC_COLLECTION_NAME=${OHLC_COLLECTION_NAME}
    ports:
      - "1000:1000"
    restart: unless-stopped
    networks:
      net_internal:
        ipv4_address: ${WS_TO_MONGO_HOST}
    depends_on:
      - mongodb

  trading-service:
    image: reosiain/billy:crypto_trading_service
    container_name: trading-service
    environment:        
      - API_KEY=${API_KEY}
      - API_SECRET=${API_SECRET}
      - API_PASS=${API_PASS}
      - DB_URI=${DB_URI_WO_PORT}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - OHLC_COLLECTION_NAME=${OHLC_COLLECTION_NAME}
      - TRADE_COLLECTION_NAME=${TRADE_COLLECTION_NAME}
      - PAIRS=${PAIRS}
      - MODEL_PATH=${MODEL_PATH}
      - LOGGER_PATH=${LOGGER_PATH}
    ports:
      - "1000:1000"
    restart: unless-stopped
    networks:
      net_internal:
        ipv4_address: ${TRADING_SERVICE_HOST}
    depends_on:
      - mongodb

  mongodb:
    image: mongo
    container_name: mongodb
    command: mongod --quiet --port 1000 --bind_ip ${DB_URI_WO_PORT}
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./internals/db/data:/data/db
      - ./internals/db/log:/data/log
    ports:
      - "1000:1000"
    restart: unless-stopped
    networks:
      net_internal:
        ipv4_address: ${DB_URI_WO_PORT}

networks:
  net_internal:
    external: false
    ipam:
      config:
        - subnet: 192.168.55.0/24
          gateway: 192.168.55.1

  net_external:
    external: true
    name: net_external



